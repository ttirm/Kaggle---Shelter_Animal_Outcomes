library(swirl)
install_from_swirl("Regression Models")
swirl()
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <-fit$coefficients[1]
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
#Here are the vectors of variations or tweaks
sltweak <- c(.01, .02, .03, -.01, -.02, -.03) #one for the slope
ictweak <- c(.1, .2, .3, -.1, -.2, -.3)  #one for the intercept
lhs <- numeric()
rhs <- numeric()
#left side of eqn is the sum of squares of residuals of the tweaked regression line
for (n in 1:6) lhs[n] <- sqe(ols.slope+sltweak[n],ols.ic+ictweak[n])
#right side of eqn is the sum of squares of original residuals + sum of squares of two tweaks
for (n in 1:6) rhs[n] <- sqe(ols.slope,ols.ic) + sum(est(sltweak[n],ictweak[n])^2)
lhs-rhs
all.equal(lhs, rhs)
verchild <- var(dalton$child)
varchild <- var(galton$child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
verEst <- est(ols.slope, ols.slope)
verEst <- var(est(ols.slope, ols.slope))
verEst <- var(est(ols.slope, ols.ic))
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, sum(varRes,varEst))
all.equal(varChild, varRes,varEst)
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
library(swirl)
library(swirl)
swirl()
?mtcars
pairs(mtcars)
str(mtcars)
levels(mtcars$disp)
levels(factor(mtcars$disp))
cor(disp,hp)
?with
?mtcars
with(mtcars,cor(disp,hp)
)
with(mtcars,cor(disp,drat))
summary(with(mtcars,cor(disp,drat)))
with(mtcars,cor(disp,vs))
glm(mpg ~ cyl, data = mtcars)
fit1 <- glm(mpg ~ cyl, data = mtcars)
summary(fit1)
plot(summary(fit1))
plot(fit1)
pairs(mtcars)
fit1 <- glm(mpg ~ disp, data = mtcars)
summary(fit1)
fit <- glm(mpg ~ ., data = mtcars)
summary(fit)
fit3 <- glm(mpg ~ wt, data = mtcars)
summary(fit3)
names(mtcars)
fit4 <- glm(mpg ~ cyl+ disp + hp + drat + qsec + vs + am + gear + carb, data = mtcars)
summary(fit4)
fit4 <- glm(mpg ~ carb, data = mtcars)
summary(fit4)
fit4 <- glm(mpg ~ wt + carb, data = mtcars)
summary(fit4)
fit4 <- glm(mpg ~ cyl+ disp + hp + drat + qsec + vs + am + gear + carb, data = mtcars)
summary(fit4)
fit4 <- glm(mpg ~ cyl+ disp + hp + drat + qsec + vs + am + gear, data = mtcars)
summary(fit4)
fit4 <- glm(mpg ~ qsec, data = mtcars)
summary(fit4)
fit4 <- glm(mpg ~ wt + qsec, data = mtcars)
summary(fit4)
with(mtcars,cor(cyl,disp))
with(mtcars,cor(cyl,am))
fit1 <- glm(mpg ~ cyl, data = mtcars)
summary(fit1)
fit3 <- glm(mpg ~ wt, data = mtcars)
summary(fit3)
fit4 <- glm(mpg ~ cyl+ disp + hp + drat + qsec + vs + am + gear, data = mtcars)
summary(fit4)
fit4 <- glm(mpg ~ wt + qsec, data = mtcars)
summary(fit4)
fit5 <- glm(mpg ~ wt + qsec+drat, data = mtcars)
summary(fit5)
fit5 <- glm(mpg ~ wt + qsec+gear, data = mtcars)
summary(fit5)
fit5 <- glm(mpg ~ wt + qsec+vs, data = mtcars)
summary(fit5)
fit5 <- glm(mpg ~ wt + qsec+cyl, data = mtcars)
summary(fit5)
fit5 <- glm(mpg ~ wt + qsec+cyl+carb, data = mtcars)
summary(fit5)
fit5 <- glm(mpg ~ wt + qsec+carb, data = mtcars)
summary(fit5)
fit5 <- glm(mpg ~ wt + qsec+cyl, data = mtcars)
summary(fit5)
fit5 <- glm(mpg ~ wt + qsec+cyl+carb, data = mtcars)
summary(fit5)
fit5 <- glm(mpg ~ wt + qsec+cyl+carb+hp, data = mtcars)
summary(fit5)
fit4 <- glm(mpg ~ cyl+ disp + hp + drat + qsec + vs + am + gear, data = mtcars)
summary(fit4)
fit5 <- glm(mpg ~ wt + qsec+cyl+carb+hp, data = mtcars)
summary(fit5)
fit5 <- glm(mpg ~ wt + qsec+cyl+carb, data = mtcars)
summary(fit5)
fit5 <- glm(mpg ~ wt + qsec+cyl, data = mtcars)
summary(fit5)
fit5 <- glm(mpg ~ wt + qsec, data = mtcars)
summary(fit5)
fit1 <- glm(mpg ~ cyl, data = mtcars)
summary(fit1)
fit1 <- glm(mpg ~ cyl+wt, data = mtcars)
summary(fit1)
fit5 <- glm(mpg ~ wt + qsec, data = mtcars)
summary(fit5)
anova(fit4,fit5)
summary(anova(fit4,fit5))
anova(fit4,fit5)
anova(fit4,fit1)
cor1 <- cor(mtcars, use="complete.obs" )
cor1[,1]
cor1[,1:2]
cor1[,1]
library(Quandl)
> Quandl.auth("oiaB6LyMa6wKjJThzzra")
> G <- Quandl('GOOG/NASDAQ_GOOG', start_date = '2009-06-01', end_date = '2013-06-01')
install.packages("Quandl")
library(Quandl)
> Quandl.auth("oiaB6LyMa6wKjJThzzra")
Quandl.auth("oiaB6LyMa6wKjJThzzra")
Quandl.api_key("oiaB6LyMa6wKjJThzzra")
G <- Quandl('GOOG/NASDAQ_GOOG', start_date = '2009-06-01', end_date = '2013-06-01')
str(G)
G <- G$Close
SP500 <- Quandl('YAHOO/INDEX_GSPC', start_date = '2009-06-01', end_date = '2013-06-01')
SP500 <- SP500$'Adjusted Close'
LIBOR <- Quandl('FED/RILSPDEPM01_N_B', start_date = '2009-06-01', end_date = '2013-06-01')
LIBOR <- LIBOR$Value
sapply(list(G, SP500, LIBOR), length)
G <- Quandl('GOOG/NASDAQ_GOOG',  start_date = '2009-06-01', end_date = '2013-06-01')
SP500 <- Quandl('YAHOO/INDEX_GSPC', start_date = '2009-06-01', end_date = '2013-06-01')
LIBOR <- Quandl('FED/RILSPDEPM01_N_B', start_date = '2009-06-01', end_date = '2013-06-01')
?Reduce
cdates <-Reduce(intercept,  list(G$Date, SP500$Date,LIBOR$Date))
cdates <-Reduce(intersecpt,  list(G$Date, SP500$Date,LIBOR$Date))
cdates <-Reduce(intersect,  list(G$Date, SP500$Date,LIBOR$Date))
G <- G[G$Date %in% cdates, 'Close']
SP500 <- SP500[SP500$Date %in% cdates, 'Adjusted Close']
LIBOR <- LIBOR[LIBOR$Date %in% cdates, 'Value']
logreturn <- function(x) log(tail(x, -1) / head(x, -1))
head(LIBOR, -1)
head(LIBOR)
rft <- log(1 + head(LIBOR, -1)/36000 * diff(cdates))
str(rft)
cov(logreturn(G) - rft, logreturn(SP500) - rft) / var(logreturn(SP500) - rft)
riskpremium <- function(x) logreturn(x) - rft
>cov(riskpremium(G), riskpremium(SP500)) / var(riskpremium(SP500))
riskpremium <- function(x) logreturn(x) - rft
cov(riskpremium(G), riskpremium(SP500)) / var(riskpremium(SP500))
(fit <- lm(riskpremium(G) ~ riskpremium(SP500)))
plot(riskpremium(SP500), riskpremium(G))
abline(fit, col = "red")
par(mfrow = c(2, 2))
plot(fit)
symbols <- c("A", "AA", "AAPL", "ABC", "ABT", "ACE", "ACN", "ACT",
"ADBE", "ADI", "ADM", "ADP", "ADSK", "AEE", "AEP", "AES","AET", "AFL",
"AGN", "AIG", "AIV", "AIZ", "AKAM", "ALL", "ALTR", "ALXN", "AMAT", "AMD",
"AMGN", "AMP", "AMT", "AMZN", "AN", "ANF", "AON", "APA", "APC", "APD",
"APH", "APOL", "ARG", "ATI", "AVB", "AVP", "AVY", "AXP", "AZO", "BA",
"BAC", "BAX", "BBBY", "BBT", "BBY", "BCR", "BDX", "BEAM", "BEN", "BF.B",
"BHI", "BIIB", "BK", "BLK", "BLL", "BMC", "BMS", "BMY", "BRCM", "BRK.B",
"BSX", "BTU", "BXP", "C", "CA", "CAG", "CAH", "CAM", "CAT", "CB", "CBG",
"CBS", "CCE", "CCI", "CCL", "CELG", "CERN", "CF", "CHK", "CHRW", "CI",
"CINF", "CL", "CLF", "CLX", "CMA", "CMCSA", "CME")
?get.hist.quote
library(tseries)
res <- lapply(symbols, function(symbol)
+ get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE,
+ start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
res <- lapply(symbols, function(symbol)get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
res <- lapply(symbols, function(symbol)get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
res <- lapply(symbols, function(symbol) get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
get.hist.quote("ADBE", quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01'))
get.hist.quote("A", quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01'))
res <- lapply(symbols, function(symbol) get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
get.hist.quote("ACT", quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01'))
symbols <- c("A", "AA", "AAPL", "ABC", "ABT", "ACE", "ACN",
"ADBE", "ADI", "ADM", "ADP", "ADSK", "AEE", "AEP", "AES","AET", "AFL",
"AGN", "AIG", "AIV", "AIZ", "AKAM", "ALL", "ALTR", "ALXN", "AMAT", "AMD",
"AMGN", "AMP", "AMT", "AMZN", "AN", "ANF", "AON", "APA", "APC", "APD",
"APH", "APOL", "ARG", "ATI", "AVB", "AVP", "AVY", "AXP", "AZO", "BA",
"BAC", "BAX", "BBBY", "BBT", "BBY", "BCR", "BDX", "BEAM", "BEN", "BF.B",
"BHI", "BIIB", "BK", "BLK", "BLL", "BMC", "BMS", "BMY", "BRCM", "BRK.B",
"BSX", "BTU", "BXP", "C", "CA", "CAG", "CAH", "CAM", "CAT", "CB", "CBG",
"CBS", "CCE", "CCI", "CCL", "CELG", "CERN", "CF", "CHK", "CHRW", "CI",
"CINF", "CL", "CLF", "CLX", "CMA", "CMCSA", "CME")
library(tseries)
res <- lapply(symbols, function(symbol) get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
get.hist.quote("ACT", quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01'))
symbols <- c("A", "AA", "AAPL", "ABC", "ABT", "ACE", "ACN",
"ADBE", "ADI", "ADM", "ADP", "ADSK", "AEE", "AEP", "AES","AET", "AFL",
"AGN", "AIG", "AIV", "AIZ", "AKAM", "ALL", "ALTR", "ALXN", "AMAT", "AMD",
"AMGN", "AMP", "AMT", "AMZN", "AN", "ANF", "AON", "APA", "APC", "APD",
"APH", "APOL", "ARG", "ATI", "AVB", "AVP", "AVY", "AXP", "AZO", "BA",
"BAC", "BAX", "BBBY", "BBT", "BBY", "BCR", "BDX", "BEAM", "BEN",
"BHI", "BIIB", "BK", "BLK", "BLL", "BMC", "BMS", "BMY", "BRCM", "BRK.B",
"BSX", "BTU", "BXP", "C", "CA", "CAG", "CAH", "CAM", "CAT", "CB", "CBG",
"CBS", "CCE", "CCI", "CCL", "CELG", "CERN", "CF", "CHK", "CHRW", "CI",
"CINF", "CL", "CLF", "CLX", "CMA", "CMCSA", "CME")
library(tseries)
res <- lapply(symbols, function(symbol) get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
symbols <- c("A", "AA", "AAPL", "ABC", "ABT", "ACE", "ACN",
"ADBE", "ADI", "ADM", "ADP", "ADSK", "AEE", "AEP", "AES","AET", "AFL",
"AGN", "AIG", "AIV", "AIZ", "AKAM", "ALL", "ALTR", "ALXN", "AMAT", "AMD",
"AMGN", "AMP", "AMT", "AMZN", "AN", "ANF", "AON", "APA", "APC", "APD",
"APH", "APOL", "ARG", "ATI", "AVB", "AVP", "AVY", "AXP", "AZO", "BA",
"BAC", "BAX", "BBBY", "BBT", "BBY", "BCR", "BDX", "BEAM", "BEN",
"BHI", "BIIB", "BK", "BLK", "BLL", "BMC", "BMS", "BMY", "BRCM",
"BSX", "BTU", "BXP", "C", "CA", "CAG", "CAH", "CAM", "CAT", "CB", "CBG",
"CBS", "CCE", "CCI", "CCL", "CELG", "CERN", "CF", "CHK", "CHRW", "CI",
"CINF", "CL", "CLF", "CLX", "CMA", "CMCSA", "CME")
library(tseries)
res <- lapply(symbols, function(symbol) get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
head(res)
head(res)
class(res)
head(res[1])
head(res[[1]])
names(res)
LIBOR <- Quandl('FED/RILSPDEPM01_N_B', start_date = '2003-01-01', end_date = '2007-01-01')
SP500 <- Quandl('YAHOO/INDEX_GSPC',start_date = '2003-01-01', end_date = '2007-01-01')
cdates <- intersect(LIBOR$Date, SP500$Date)
d <- data.frame(date = as.Date(cdates, origin = '1970-01-01'))
str(d)
d$day <- format(d$date, format = '%d')
d$my <- format(d$date, format = '%Y-%m')
d$my
d$day
(fds <- with(d, tapply(day, my, min)))
row.names(fds)
fds
(fds <- as.Date(paste(row.names(fds), fds, sep = '-')))
(fds <- with(d, tapply(day, my, min)))
class(fds)
fds
(fds <- as.Date(paste(row.names(fds), fds, sep = '-')))
res <- lapply(res, function(x) x[which(zoo::index(x) %in% fds)])
res <- do.call(merge, res)
res
names(res)
?do.call
str(res)
res <- as.data.frame(res)
names(res) <- symbols
LIBOR <- LIBOR[LIBOR$Date %in% fds, 'Value']
rft <- log(1 + head(LIBOR, -1)/36000 * as.numeric(diff(fds)))
res <- apply(res, 2, riskpremium)
SP500 <- SP500[SP500$Date %in% fds, 'Adjusted Close']
str(SP500)
SP500
logreturn <- function(x) log(tail(x, -1) / head(x, -1))
riskpremium <- function(x) logreturn(x) - rft
symbols <- c("A", "AA", "AAPL", "ABC", "ABT", "ACE", "ACN",
"ADBE", "ADI", "ADM", "ADP", "ADSK", "AEE", "AEP", "AES","AET", "AFL",
"AGN", "AIG", "AIV", "AIZ", "AKAM", "ALL", "ALTR", "ALXN", "AMAT", "AMD",
"AMGN", "AMP", "AMT", "AMZN", "AN", "ANF", "AON", "APA", "APC", "APD",
"APH", "APOL", "ARG", "ATI", "AVB", "AVP", "AVY", "AXP", "AZO", "BA",
"BAC", "BAX", "BBBY", "BBT", "BBY", "BCR", "BDX", "BEAM", "BEN",
"BHI", "BIIB", "BK", "BLK", "BLL", "BMC", "BMS", "BMY", "BRCM",
"BSX", "BTU", "BXP", "C", "CA", "CAG", "CAH", "CAM", "CAT", "CB", "CBG",
"CBS", "CCE", "CCI", "CCL", "CELG", "CERN", "CF", "CHK", "CHRW", "CI",
"CINF", "CL", "CLF", "CLX", "CMA", "CMCSA", "CME")
library(tseries)
res <- lapply(symbols, function(symbol) get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
head(res[[1]])
LIBOR <- Quandl('FED/RILSPDEPM01_N_B', start_date = '2003-01-01', end_date = '2007-01-01')
SP500 <- Quandl('YAHOO/INDEX_GSPC',start_date = '2003-01-01', end_date = '2007-01-01')
cdates <- intersect(LIBOR$Date, SP500$Date)
d <- data.frame(date = as.Date(cdates, origin = '1970-01-01'))
str(d)
d$day <- format(d$date, format = '%d')
d$my <- format(d$date, format = '%Y-%m')
(fds <- with(d, tapply(day, my, min)))
(fds <- as.Date(paste(row.names(fds), fds, sep = '-')))
res <- lapply(res, function(x) x[which(zoo::index(x) %in% fds)])
res <- do.call(merge, res)
names(res)
str(res)
res <- as.data.frame(res)
names(res) <- symbols
LIBOR <- LIBOR[LIBOR$Date %in% fds, 'Value']
rft <- log(1 + head(LIBOR, -1)/36000 * as.numeric(diff(fds)))
res <- apply(res, 2, riskpremium)
SP500 <- SP500[SP500$Date %in% fds, 'Adjusted Close']
library(Quandl)
LIBOR <- Quandl('FED/RILSPDEPM01_N_B', start_date = '2003-01-01', end_date = '2007-01-01')
SP500 <- Quandl('YAHOO/INDEX_GSPC',start_date = '2003-01-01', end_date = '2007-01-01')
cdates <- intersect(LIBOR$Date, SP500$Date)
d <- data.frame(date = as.Date(cdates, origin = '1970-01-01'))
str(d)
d$day <- format(d$date, format = '%d')
d$my <- format(d$date, format = '%Y-%m')
(fds <- with(d, tapply(day, my, min)))
(fds <- as.Date(paste(row.names(fds), fds, sep = '-')))
res <- lapply(res, function(x) x[which(zoo::index(x) %in% fds)])
res <- do.call(merge, res)
names(res)
str(res)
res <- as.data.frame(res)
names(res) <- symbols
LIBOR <- LIBOR[LIBOR$Date %in% fds, 'Value']
rft <- log(1 + head(LIBOR, -1)/36000 * as.numeric(diff(fds)))
res <- apply(res, 2, riskpremium)
SP500 <- SP500[SP500$Date %in% fds, 'Adjusted Close']
res
logreturn <- function(x) log(tail(x, -1) / head(x, -1))
riskpremium <- function(x) logreturn(x) - rft
symbols <- c("A", "AA", "AAPL", "ABC", "ABT", "ACE", "ACN",
"ADBE", "ADI", "ADM", "ADP", "ADSK", "AEE", "AEP", "AES","AET", "AFL",
"AGN", "AIG", "AIV", "AIZ", "AKAM", "ALL", "ALTR", "ALXN", "AMAT", "AMD",
"AMGN", "AMP", "AMT", "AMZN", "AN", "ANF", "AON", "APA", "APC", "APD",
"APH", "APOL", "ARG", "ATI", "AVB", "AVP", "AVY", "AXP", "AZO", "BA",
"BAC", "BAX", "BBBY", "BBT", "BBY", "BCR", "BDX", "BEAM", "BEN",
"BHI", "BIIB", "BK", "BLK", "BLL", "BMC", "BMS", "BMY", "BRCM",
"BSX", "BTU", "BXP", "C", "CA", "CAG", "CAH", "CAM", "CAT", "CB", "CBG",
"CBS", "CCE", "CCI", "CCL", "CELG", "CERN", "CF", "CHK", "CHRW", "CI",
"CINF", "CL", "CLF", "CLX", "CMA", "CMCSA", "CME")
library(tseries)
library(Quandl)
res <- lapply(symbols, function(symbol) get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
head(res[[1]])
LIBOR <- Quandl('FED/RILSPDEPM01_N_B', start_date = '2003-01-01', end_date = '2007-01-01')
SP500 <- Quandl('YAHOO/INDEX_GSPC',start_date = '2003-01-01', end_date = '2007-01-01')
cdates <- intersect(LIBOR$Date, SP500$Date)
d <- data.frame(date = as.Date(cdates, origin = '1970-01-01'))
str(d)
d$day <- format(d$date, format = '%d')
d$my <- format(d$date, format = '%Y-%m')
(fds <- with(d, tapply(day, my, min)))
(fds <- as.Date(paste(row.names(fds), fds, sep = '-')))
res <- lapply(res, function(x) x[which(zoo::index(x) %in% fds)])
res <- do.call(merge, res)
names(res)
str(res)
res <- as.data.frame(res)
names(res) <- symbols
LIBOR <- LIBOR[LIBOR$Date %in% fds, 'Value']
rft <- log(1 + head(LIBOR, -1)/36000 * as.numeric(diff(fds)))
res <- apply(res, 2, riskpremium)
SP500 <- SP500[SP500$Date %in% fds, 'Adjusted Close']
res
res <- apply(res, 2, riskpremium)
res <- as.data.frame(res)
r <- t(sapply(symbols, function(symbol)
+ c(beta = lm(res[, symbol] ~ riskpremium(SP500))$coefficients[[2]], mean = mean(res[, symbol]))))
r <- as.data.frame(r)
r
mean(res[, symbol])
r <- t(sapply(symbols, function(symbol)
+ c(beta = lm(res[, symbol] ~ riskpremium(SP500))$coefficients[[2]], mean = mean(res[, symbol]))))
r <- as.data.frame(r)
r
res
res <- lapply(symbols, function(symbol) get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
d <- data.frame(date = as.Date(cdates, origin = '1970-01-01'))
str(d)
d$day <- format(d$date, format = '%d')
d$my <- format(d$date, format = '%Y-%m')
(fds <- with(d, tapply(day, my, min)))
(fds <- as.Date(paste(row.names(fds), fds, sep = '-')))
res <- lapply(res, function(x) x[which(zoo::index(x) %in% fds)])
res <- do.call(merge, res)
names(res)
str(res)
res <- as.data.frame(res)
names(res) <- symbols
LIBOR <- LIBOR[LIBOR$Date %in% fds, 'Value']
rft <- log(1 + head(LIBOR, -1)/36000 * as.numeric(diff(fds)))
LIBOR <- LIBOR[LIBOR$Date %in% fds, 'Value']
LIBOR <- Quandl('FED/RILSPDEPM01_N_B', start_date = '2003-01-01', end_date = '2007-01-01')
cdates <- intersect(LIBOR$Date, SP500$Date)
logreturn <- function(x) log(tail(x, -1) / head(x, -1))
riskpremium <- function(x) logreturn(x) - rft
symbols <- c("A", "AA", "AAPL", "ABC", "ABT", "ACE", "ACN",
"ADBE", "ADI", "ADM", "ADP", "ADSK", "AEE", "AEP", "AES","AET", "AFL",
"AGN", "AIG", "AIV", "AIZ", "AKAM", "ALL", "ALTR", "ALXN", "AMAT", "AMD",
"AMGN", "AMP", "AMT", "AMZN", "AN", "ANF", "AON", "APA", "APC", "APD",
"APH", "APOL", "ARG", "ATI", "AVB", "AVP", "AVY", "AXP", "AZO", "BA",
"BAC", "BAX", "BBBY", "BBT", "BBY", "BCR", "BDX", "BEAM", "BEN",
"BHI", "BIIB", "BK", "BLK", "BLL", "BMC", "BMS", "BMY", "BRCM",
"BSX", "BTU", "BXP", "C", "CA", "CAG", "CAH", "CAM", "CAT", "CB", "CBG",
"CBS", "CCE", "CCI", "CCL", "CELG", "CERN", "CF", "CHK", "CHRW", "CI",
"CINF", "CL", "CLF", "CLX", "CMA", "CMCSA", "CME")
library(tseries)
library(Quandl)
res <- lapply(symbols, function(symbol) get.hist.quote(symbol, quote = "AdjClose", quiet = TRUE, start = as.Date('2003-01-01'), end = as.Date('2007-01-01')))
head(res[[1]])
LIBOR <- Quandl('FED/RILSPDEPM01_N_B', start_date = '2003-01-01', end_date = '2007-01-01')
SP500 <- Quandl('YAHOO/INDEX_GSPC',start_date = '2003-01-01', end_date = '2007-01-01')
cdates <- intersect(LIBOR$Date, SP500$Date)
d <- data.frame(date = as.Date(cdates, origin = '1970-01-01'))
str(d)
d$day <- format(d$date, format = '%d')
d$my <- format(d$date, format = '%Y-%m')
(fds <- with(d, tapply(day, my, min)))
(fds <- as.Date(paste(row.names(fds), fds, sep = '-')))
res <- lapply(res, function(x) x[which(zoo::index(x) %in% fds)])
res <- do.call(merge, res)
names(res)
str(res)
res <- as.data.frame(res)
names(res) <- symbols
LIBOR <- LIBOR[LIBOR$Date %in% fds, 'Value']
rft <- log(1 + head(LIBOR, -1)/36000 * as.numeric(diff(fds)))
res <- apply(res, 2, riskpremium)
SP500 <- SP500[SP500$Date %in% fds, 'Adjusted Close']
res
class(res)
res <- as.data.frame(res)
r <- t(sapply(symbols, function(symbol)
+ c(beta = lm(res[, symbol] ~ riskpremium(SP500))$coefficients[[2]], mean = mean(res[, symbol]))))
r <- as.data.frame(r)
r
plot(r$beta, r$mean)
abline(lm(r$mean ~ r$beta), col = 'red')
summary(lm(r$mean ~ r$beta))
1-0.998
1-0.9994
library(manipulate)
install.packages("manipulate")
library(manipulate)
library(manipulate)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("shiny")
library(shiny)
#Animal Sherter Outcome
setwd("C:/Users/tiago_000/Documents/GitHub/Kaggle - Shelter_Animal_Outcomes")
train <- read.csv("./data/train.csv", na.strings = "")
str(train)
unique(train$SexuponOutcome)
unique(train$SexuponOutcome)
(train$SexuponOutcome)
table(train$SexuponOutcome)
#Distinguish animals with and without name
train$Hasname <- !is.na(train$Name)
head(train)
table(train$Hasname, train$SexuponOutcome)
#Distinguish animals with just one color
res <- apply(as.matrix(train$Color), 1, function(x) {grepl("/", x)})
train$MultiCol <- as.data.frame(res)$res
head(train)
table(train$MultiCol, train$SexuponOutcome)
train$SexuponOutcome[train$SexuponOutcome == "Unknown"]
train[train$SexuponOutcome == "Unknown" && train$Hasname == TRUE,]
which(train$SexuponOutcome == "Unknown" && train$Hasname == TRUE)
which(train$SexuponOutcome == "Unknown" && train$Hasname == FALSE)
which(train$Hasname == FALSE)
which(train$SexuponOutcome == "Unknown" & train$Hasname == FALSE)
train[which(train$SexuponOutcome == "Unknown" & train$Hasname == FALSE),]
train[which(train$SexuponOutcome == "Unknown" & train$Hasname == TRUE),]
table(train[which(train$SexuponOutcome != "Unknown" & train$Hasname == TRUE),]$Name)
table(train$Hasname, train$SexuponOutcome)
t1 <- train[which(train$SexuponOutcome == "Unknown" & train$Hasname == TRUE),]
t1 <- train[which(train$SexuponOutcome != "Unknown" & train$Hasname == TRUE),]
table(t1$Name, t1$SexuponOutcome)
res <- apply(as.matrix(t1$SexuponOutcome), 1, function(x) {grepl("Male", x)})
t1$Sex <- as.data.frame(res)$res
table(t1$Name, t1$Sex)
tab <- table(t1$Name, t1$Sex)
class(tab)
summary(tab)
tab <- as.data.frame(table(t1$Name, t1$Sex))
tab
names(tab)
tab <- as.matrix(table(t1$Name, t1$Sex))
head(tab)
head(table(t1$Name, t1$Sex))
table(t1$Name, t1$Sex)
tab <- as.data.frame(table(t1$Name, t1$Sex))
head(tab)
head(table(t1$Name, t1$Sex))
tab <- as.matrix(table(t1$Name, t1$Sex))
?as.data.frame
?data.frame
as.data.frame(names = tab[,1])
data.frame(names = tab[,1])
head(data.frame(names = tab[,1]))
tab
head(tab)
head(data.frame(names = tab[,1], male = if(tab[,2] > tab[,3]){TRUE}else{FALSE})))
head(data.frame(names = tab[,1], male = if(tab[,2] > tab[,3]){TRUE}else{FALSE}))
tab[,3]
head(tab)
head(data.frame(names = row.names(tab), male = if(tab[,2] > tab[,1]){TRUE}else{FALSE}))
tab[,2] > tab[,1]
head(data.frame(names = row.names(tab), male = tab[,2] > tab[,1]))
t2 <- data.frame(names = row.names(tab), male = tab[,2] > tab[,1])
